#!/usr/bin/perl -w
# jira - open jira quickly in browser

use strict;

use Getopt::Long;

my $a_server;
my $a_verbose;
my $a_dryRun;
my $a_help;

my $PORT = "80";

sub getSecret($) {
    my ($KEY) = @_;
    my $EXISTS = `secret ${KEY} --exists`;
    chomp $EXISTS;
    if ($EXISTS eq "false") {
        print "Error: \"${KEY}\" secret not found\n";
        exit 1;
    }
    my $VALUE = `secret ${KEY}`;
    chomp $VALUE;
    return $VALUE;
}

sub help() {
    print STDOUT <<'HELP';

jira - open jira quickly in browser

USAGE:
  >> jira [issue-id] [args]

Options:
  --server  (-s) Jira server
  --verbose (-v) Print extra logging
  --dry-run (-d) Don't open browser
  --help    (-h) See this message

EXAMPLES:
  >> jira         # open first issue
  >> jira FOO-123 # open specific issue

HELP
}

MAIN: {
    GetOptions(
        'server=s' => \$a_server,
        'verbose' => \$a_verbose,
        'dry-run' => \$a_dryRun,
        'help' => \$a_help
    ) || (help() && exit 1);

    if (defined $a_help) {
        help();
        exit 1;
    }

    my $SERVER = $a_server;
    if (!defined $SERVER) {
        $SERVER = getSecret("jira-server");
    }

    if ($a_verbose) {
        print "SERVER: $SERVER\n";
        print "PORT: $PORT\n";
    }

    # if no args, then exit
    if (!@ARGV) {
        print "nothing to do\n";
        help();
        exit 0;
    }

    my @args = @ARGV;
    foreach my $arg (@args) {
        my $URL = "https://$SERVER/issues";
        if ($arg) {
            $URL = "https://$SERVER/browse/$arg";
        }
        if ($a_verbose) {
            print "URL: $URL\n";
        }
        if (!defined $a_dryRun) {
            `open-browser $URL`;
        }
    }

    exit 0;
}

