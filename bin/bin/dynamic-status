#!/usr/bin/perl -w
# dynamic-status

use strict;

use Getopt::Long;

my $a_help;

my $SPACE="  ";

my $DYNAMIC_STATUS_CONTROL_VALUE="0";
my $KEY = "DYNAMIC_STATUS_CONTROL";

sub help() {
    print STDOUT <<'HELP';

dynamic-status

EXAMPLES:
  >> dynamic-status

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}


MAIN: {
    GetOptions(
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    $DYNAMIC_STATUS_CONTROL_VALUE=`increment $KEY --show`;
    chomp $DYNAMIC_STATUS_CONTROL_VALUE;

    my @output = (
      "node".`node --version | nth -c 1-50`,
      "nvim".`nvim --version | nth -c 6-50 0`,
      "git".`git --version | nth -c 12-50`
    );

    my $mod = scalar (@output) + 1;
    $DYNAMIC_STATUS_CONTROL_VALUE = $DYNAMIC_STATUS_CONTROL_VALUE % $mod;

    my $OUT="";
    if ($DYNAMIC_STATUS_CONTROL_VALUE eq "0" ) {
      foreach(@output) {
          $OUT="${OUT}$_${SPACE}";
      }
    } else {
        $OUT=$output[$DYNAMIC_STATUS_CONTROL_VALUE - 1];
    }

    print $OUT;

    exit 0;
}

