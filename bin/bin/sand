#!/usr/bin/perl -w
# sand - meant to be called over and over

use strict;

use Getopt::Long;

my $a_help;
my $a_mode;
my $a_else;

sub help() {
    print STDOUT <<'HELP';

sand - hourglass simulation

USAGE:
  >> sand [options]

Options:
  --mode      (-f) slug, blink, pass
  --help      (-h) See this message

EXAMPLES:
  >> sand input

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}


sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

my $SPACE = " ";

MAIN: {
    GetOptions(
        'help' => \$a_help,
        'mode:s' => \$a_mode,
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    my $indicator = $firstArg;
    if (!defined $firstArg) {
        print "argument required\n";
        die 1;
    }
    my $length = length($indicator);

    my $time = time();

    # cycle through modes
    if (!defined $a_mode) {
        my $total = $length * 4;
        my $mod = $time % $total;
        if ($mod > (($total / 2) - 1)) {
            $a_mode = 'blink';
        } else {
            $a_mode = 'slug';
        }
    }

    if ($a_mode eq 'pass') {
        print "$indicator\n";
        exit 0;
    }

    if ($a_mode eq 'slug') {
        my @spaces = ();
        for(my $i = 0; $i < $length; $i++) {
            my $indicator = substr($indicator, $i, 1);
            if ($i == $time % $length) {
                push (@spaces, uc($indicator));
            } else {
                push (@spaces, $indicator);
            }
        }
        print join('', @spaces)."\n";
        exit 0;
    }

    if ($a_mode eq 'blink') {
        if ($time % 2 == 0) {
            print "$indicator\n";
        } else {
            my @spaces = ();
            for(my $i = 1; $i <= $length; $i++) {
                push (@spaces, "$SPACE");
            }
            my $string = join('', @spaces);
            print "$string\n";
        }
        exit 0;
    }

    print "invalid mode. see --help\n";
    exit 1;
}

