#!/usr/bin/perl -w
# sand - simulates a simple hourglass

use strict;

use Getopt::Long;

my $a_help;
my $a_numbers;

sub help() {
    print STDOUT <<'HELP';

sand - hourglass simulation

USAGE:
  >> sand [options]

Options:
  --numbers (-n) Incrementing number
  --help    (-h) See this message

EXAMPLES:
  >> sand   # change every second
  >> sand 3 # modulus

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}


sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

MAIN: {
    GetOptions(
        'help' => \$a_help,
        'numbers' => \$a_numbers,
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    my $mod = $firstArg;
    if (!defined $mod) {
        $mod = 2;
    }

    my $time = time();

    if (defined $a_numbers) {
        my $last = substr($time, -1);
        print "$last\n";
    } else {
        if ($time % $mod == 0) {
            print "_\n";
        } else {
            print "-\n";
        }
    }

    exit 0;
}

