#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_help;

sub help() {
    print STDOUT <<'HELP';

branch

USAGE:
  >> branch [options] [args]

Options:
  --help    (-h) See this message

EXAMPLES:
  >> branch

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

MAIN: {
    GetOptions(
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    # exit if not in a git repo
    my $isGit = `isgit`;
    chomp $isGit;
    if ($isGit ne 'true') {
        print "not a git repo\n";
        exit 1;
    }

    my $toplevel = `git rev-parse --show-toplevel`;
    chomp $toplevel;
    my $gitCommand = "git -C \"${toplevel}\" ";

    my $command = "$gitCommand rev-parse --abbrev-ref HEAD";
    my $result = `${command}`;
    chomp $result;

    print "$result\n";
    exit 0;
}

