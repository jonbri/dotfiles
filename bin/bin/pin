#!/usr/bin/perl -w
# pin - wrapper for "git push"

use strict;

use Getopt::Long;

my $a_force;
my $a_verbose;
my $a_help;

sub help() {
    print STDOUT <<'HELP';

pin - wrapper for "git push"

USAGE:
  >> pin [options]

Options:
  --force   (-f) Skip confirmations
  --verbose (-v) extra logging
  --help    (-h) See this message

EXAMPLES:
  >> pin    # push up to remote
  >> pin -f # push w/o confirm

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}


sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

sub confirm($) {
    my ($message)=@_;
    print $message;
    my $ok=<>;
    chomp $ok;
    return $ok;
}

MAIN: {
    GetOptions(
        'force' => \$a_force,
        'verbose' => \$a_verbose,
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    my $cleandirty = `cleandirty`;
    chomp $cleandirty;
    my $leftright = `leftright`;
    chomp $leftright;
    if ($cleandirty eq 'clean' && $leftright eq '0-0-0') {
        print "nothing to do\n";
        exit 0;
    }

    my $BRANCH=`git rev-parse --abbrev-ref HEAD`;
    chomp $BRANCH;
    my $GIT_NAME=`persona | nth --first`;
    chomp $GIT_NAME;
    my $GIT_EMAIL=`persona | nth --last`;
    chomp $GIT_EMAIL;
    my $REMOTE="origin";

    my $KNOWN_RESULTS=`persona --known-from HEAD~`;
    chomp $KNOWN_RESULTS;
    if ( $KNOWN_RESULTS =~ "not found" ) {
      print "WARNING: ${GIT_NAME}(${GIT_EMAIL}) NOT FOUND in this repo's history\n";
      confirm("continue? ");
    }

    `git fetch --quiet`;

    if (`git status --porcelain`) {
        if ($a_verbose) {
            print "outstanding changes\n";
        }
        print `git status --short`;

        if (! defined $a_force) {
            confirm("amend and continue? ");
        }
        print `git add . && git commit --quiet --amend --reuse-message=HEAD`;
    }

    my $command = "git push --force $REMOTE $BRANCH";
    if (!defined $a_force && $leftright =~ /[\d]+-0/) {
      $command = "git push $REMOTE $BRANCH";
    }

    if (defined $a_force) {
        if ($a_verbose) {
            print "skipping confirmation\n";
        }
    } else {
        if ( ! `git rev-parse --verify $REMOTE/$BRANCH 2>/dev/null` ) {
            print "$REMOTE/$BRANCH does not exist\n";
        } else {
            print "$leftright\n";
        }

        confirm("$command (press enter) ");
    }

    print `crumb pin_$BRANCH`;
    print `$command`;
    print "done\n";

    exit 0;
}

