#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_root;
my $a_list;
my $a_count;
my $a_exact;
my $a_nth;
my $a_base;
my $a_help;

my $A = $ENV{A};
my $B = $ENV{B};
my $C = $ENV{C};

sub help() {
    print STDOUT <<'HELP';

    abc

USAGE:
  >> aa [path] [options]

Options:
  --help  (-h) See this message
  --root  (-r) Specify root dir (a,b,c)
  --list  (-l) Show matches
  --nth   (-n) Show nth match (default: 0)
  --count (-c) Show number of matches
  --base  (-b) Show root path
  --exact (-e) Exact match

EXAMPLES:
  >> abc        # $A
  >> abc -r b   # $B
  >> abc foobar # $A/foobar
  >> abc -r b fo*ar # $C/foobar
  >> abc foobar --base # /path/to/a

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}


MAIN: {
    GetOptions(
        'root=s' => \$a_root,
        'list' => \$a_list,
        'count' => \$a_count,
        'exact' => \$a_exact,
        'nth:s' => \$a_nth,
        'base' => \$a_base,
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    if (!defined $firstArg) {
        $firstArg = "";
    }

    if (!defined $a_root) {
        $a_root = "a";
    }

    my $PREFIX = $A;
    if ($a_root eq "b") {
        $PREFIX = $B;
    } elsif ($a_root eq "c") {
        $PREFIX = $C;
    }

    my $pathArg = "";
    if ($firstArg eq "") {
        $pathArg = "*";
    } else {
        $pathArg = "*$firstArg*";
    }
    if (defined $a_exact) {
        $pathArg = $firstArg;
    }

    my @list = runCommand("find $PREFIX -maxdepth 1 -type d -iname \"$pathArg\"");
    if (defined $a_list) {
        my $i = 0;
        foreach my $line (@list) {
            chomp $line;
            print "${i}${line}\n";
            $i++;
        }
        exit 0;
    }
    if (defined $a_count) {
        print scalar @list;
        print "\n";
        exit 0;
    }

    my $path = "$PREFIX/$pathArg";
    if (defined $a_nth) {
        if ($a_nth eq "") {
            $a_nth = 0;
        }
        $a_nth = int($a_nth);
        if ($a_nth < 0 || $a_nth >= scalar @list) {
            print STDERR "Invalid index: $a_nth\n";
            exit 1;
        }
        $pathArg = $list[$a_nth];
        chomp $pathArg;
        $path = $pathArg;
    }
    if (defined $a_base) {
        $path = $PREFIX;
    }

    print "${path}\n";
    exit 0;
}

