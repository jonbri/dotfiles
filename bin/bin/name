#!/usr/bin/perl -w
# name

use strict;

use Getopt::Long;

my $a_report;
my $a_delete;
my $a_verbose;
my $a_help;

my $home=$ENV{HOME};
my $config="${home}/.config";
my $NAME_FILE="${config}/name";

sub help() {
    print STDOUT <<'HELP';

name - name your host

config file: $HOME/.config/name

USAGE:
  >> name [hostname] [options]

Options:
  --report  (-r) Print name (default)
  --delete  (-d) Delete name file
  --verbose (-v) Print extra debugging information
  --help    (-h) See this message

EXAMPLES:
  >> name      # show name
  >> name wsl2 # set name

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

sub printName() {
    if (-e $NAME_FILE) {
        print `cat $NAME_FILE`;
    } else {
        print "\n";
    }
}

MAIN: {
    GetOptions(
        'report' => \$a_report,
        'delete' => \$a_delete,
        'verbose' => \$a_verbose,
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    if (defined $a_verbose) {
        print "name file: $NAME_FILE\n";
    }


    if (defined $a_delete) {
        `rm $NAME_FILE`;
        print "done\n";
        exit 0;
    }

    if (defined $a_report) {
        printName();
        exit 0;
    }

    if (defined $firstArg) {
        `echo $firstArg > $NAME_FILE`;
        print "name updated\n"
    }

    printName();
    exit 0;
}

