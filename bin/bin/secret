#!/usr/bin/perl -w
# secret - key/value storage

use strict;

use Getopt::Long;

my $a_set;
my $a_delete;
my $a_verbose;
my $a_exists;
my $a_help;

my $SECRET = "";
my $FILE = "";
my $dotfiles_dir = $ENV{"DOTFILES_DIR"};
my $tmp_dir = "${dotfiles_dir}/tmp";
my $secrets_dir = "${tmp_dir}/secrets";

sub help() {
    print STDOUT <<'HELP';

secret - key/value storage

Note: not for storing actual secrets

USAGE:
  >> secret [key] [options]

Options:
  --set     (-s) set secret
  --delete  (-d) delete secret
  --exists  (-e) print "true" or "false"
  --verbose (-v) extra logging

EXAMPLES:
  >> secret               # print all secrets
  >> secret my-key -e     # prints "false"
  >> secret my-key -s foo # set secret
  >> secret my-key        # prints "foo"
  >> secret my-key -e     # "true"
  >> secret my-key -d     # delete secret
  >> secret my-key -e     # "false"

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

MAIN: {
    GetOptions(
        'set=s' => \$a_set,
        'delete' => \$a_delete,
        'exists' => \$a_exists,
        'verbose' => \$a_verbose,
        'help' => \$a_help,
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    if (!defined $dotfiles_dir) {
        print "Error: DOTFILES_DIR not set\n";
        exit 1;
    }

    `mkdir -p ${secrets_dir}`;

    if (defined $a_verbose) {
        print "dotfiles_dir: $dotfiles_dir\n";
        print "tmp_dir: $tmp_dir\n";
        print "secrets_dir: $secrets_dir\n";
    }

    if (!defined $firstArg) {
        if (defined $a_set || defined $a_delete) {
            print "Error: Needs key\n";
            help();
            exit 1;
        }

        # print all secrets
        my @files = glob("$secrets_dir/*");
        foreach my $file (@files) {
            my $key = $file;
            $key =~ s/$secrets_dir\///;
            my $value = `cat $file`;
            print "$key: $value\n";
        }
        exit 0;
    }

    $SECRET = $firstArg;
    $SECRET = uc($SECRET);

    my $FILE = "$secrets_dir/$SECRET";
    if (defined $a_verbose) {
        print "FILE: $FILE\n";
    }
    if (defined $a_set) {
        open(my $fh, '>', $FILE) or die "Could not open file '$FILE' $!";
        print $fh $a_set;
        close $fh;
        exit 0;
    }

    if (defined $a_delete) {
        if (! -e $FILE) {
            print "$SECRET not set\n";
            exit 1;
        }
        unlink $FILE;
        exit 0;
    }

    if (defined $a_exists) {
        if (! -e $FILE) {
            print "false\n";
            exit 0;
        }
        print "true\n";
        exit 0;
    }

    if (! -e $FILE) {
        print "$SECRET not set\n";
        exit 1;
    }

    my $value = `cat $FILE`;
    print "$value\n";

    exit 0;
}

