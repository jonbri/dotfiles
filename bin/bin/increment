#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_help;
my $a_list;
my $a_show;
my $a_delete;
my $a_verbose;

my $KEY = "";
my $FILE = "";
my $dotfiles_dir = $ENV{"DOTFILES_DIR"};
my $tmp_dir = "$dotfiles_dir/tmp";

sub help() {
    print STDOUT <<'HELP';

increment

USAGE:
  >> increment [key] [options]

Options:
  --list    (-l) print keys
  --show    (-s) just print value
  --delete  (-d) remove counter file
  --verbose (-v) print extra info

EXAMPLES:
  >> increment my-key    # increments the "my-key" value
  >> increment my-key -s # print value
  >> increment my-key -d # remove my-key
  >> increment my-key:4  # set value

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

sub render($) {
    my ($num)=@_;
    open(my $fh, '>', $FILE) or die "Could not open file '$FILE' $!";
    print $fh $num;
    close $fh;
}


MAIN: {
    GetOptions(
        'help' => \$a_help,
        'list' => \$a_list,
        'show' => \$a_show,
        'delete' => \$a_delete,
        'verbose' => \$a_verbose
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    if (! -e $tmp_dir) {
      runCommand("mkdir -p ${tmp_dir}");
    }

    if (defined $a_verbose) {
        print "files: ${tmp_dir}\n";
    }

    if (defined $a_list) {
      my @files = runCommand("ls ${tmp_dir}");
      foreach my $file (@files) {
        chomp $file;
        my $contents = `cat $tmp_dir/$file`;
        chomp $contents;
        print "$file: $contents\n";
      }
      exit 0;
    }

    if (! defined $firstArg) {
      print "Needs key, passed in as an arg\n";
      exit 1;
    }

    my $doesFirstArgContainColon = $firstArg =~ /:/;
    my $AFTER_COLON;
    if ($doesFirstArgContainColon) {
      $AFTER_COLON = $firstArg;
      $AFTER_COLON =~ s/.*://;
    }

    $KEY = $firstArg;
    $KEY = uc($KEY);
    $KEY = $KEY =~ s/:.*//r;

    $FILE = "$tmp_dir/$KEY";

    if (defined $a_delete) {
      if (! -e $FILE) {
        print "$FILE does not exist\n";
        exit 1;
      }
      my $command = "rm ${FILE}";
      print "$command\n";
      runCommand($command);
      print "done\n";
      exit 0;
    }
    
    if (!defined $a_show && ! -e $FILE) {
      if (defined $AFTER_COLON) {
        render($AFTER_COLON);
      } else {
        render(0);
      }
      exit 1;
    }

    if (defined $a_show && ! -e $FILE) {
      print "key $KEY not found\n";
      exit 1;
    }

    my $VALUE = `cat $FILE`;
    if (defined $a_show) {
      print "$VALUE\n";
      exit 0;
    }

    if (defined $AFTER_COLON) {
      render($AFTER_COLON);
    } else {
      render($VALUE + 1);
    }
    exit 0;
}

