#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_exit;
my $a_random;
my $a_help;

my $EDITOR = $ENV{EDITOR};
my $colorscheme = "retrobox";
my $home=$ENV{HOME};
my $QUE_DIR="${home}/que";

sub help() {
    print STDOUT <<'HELP';

que

USAGE:
  >> que [options]

Options:
  --exit   (-e) Exit que
  --random (-r) See random message
  --help   (-h) See this message

EXAMPLES:
  >> que

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

sub confirm($) {
    my ($message)=@_;
    print $message;
    my $ok=<>;
    chomp $ok;
    return $ok;
}


MAIN: {
    GetOptions(
        'exit' => \$a_exit,
        'random' => \$a_random,
        'help' => \$a_help,
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    if (!-d $QUE_DIR) {
        print "$QUE_DIR does not exist\n";
        exit 1;
    }

    if (defined $a_exit) {
      my $cleandirty=`status --format "%{cleandirty}"`;
      chomp $cleandirty;
      my $leftright=`status --format "%{leftright}"`;
      chomp $leftright;
      my $left=$leftright;
      $left =~ s/-.*//;
      my $right=$leftright;
      $right =~ s/.*-//;

      if ($cleandirty ne "" || (defined $left && $left ne "" && $left > 0)) {
        if ($right gt 0) {
          print "need to pull";
        } else {
          my $answer = confirm("pin? ");
          if ($answer =~ /^y/i) {
            `pin --force`;
            print "pushed\n";
          }
        }
      } else {
        print "no changes to commit\n";
      }

      exit 0;
    }

    my $stamp = `stamp`;
    chomp $stamp;

    my $year = substr($stamp, 0, 4);
    my $month = substr($stamp, 4, 2);
    my $day = substr($stamp, 6, 2);
    my $timestamp = "${year}-${month}-${day}";

    my @years = runCommand("ls -1 ${QUE_DIR}");
    chomp @years;
    @years = grep { /^\d{4}$/ } @years;
    @years = sort { $b <=> $a } @years;

    my $randomYear = $years[int rand @years];
    my @filesPerYear = runCommand("ls -1 ${QUE_DIR}/${randomYear}");
    chomp @filesPerYear;
    @filesPerYear = grep { /^\d{4}-\d{2}-\d{2}\.md$/ } @filesPerYear;
    @filesPerYear = sort { $b cmp $a } @filesPerYear;
    my $randomPath = $randomYear . "/" . $filesPerYear[int rand @filesPerYear];

    my $year_dir = "${QUE_DIR}/${year}";
    if (!defined $randomYear) {
      `mkdir -p "${year_dir}"`;
    }

    my $path = "${year_dir}/${timestamp}.md";
    if (defined $a_random) {
      $path = "${QUE_DIR}/${randomPath}";
    }

    system("$EDITOR -c \"colorscheme $colorscheme | normal Gzz\" \"${path}\"");
    exit 0;
}

