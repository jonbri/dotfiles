#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_command;
my $a_stop;
my $a_rootDir;
my $a_exact;
my $a_first;
my $a_help;

sub help() {
    print STDOUT <<'HELP';

just-args - Run individual jest tests

USAGE:
  >> just-args [args]

Options:
  --command (-c) only print out command
  --stop    (-s) do not use --watch
  --rootDir (-r) specify jest root directory
  --exact   (-e) exact test names
  --first   (-f) run only the first test found
  --help    (-h)

EXAMPLES:
  >> just-args          # matches all tests
  >> just-args foo      # matches foo.spec, foobar.spec
  >> just-args foo -e   # matches foo.spec
  >> just-args src/util # matches every test in dir

HELP
}

sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

sub clearScreen {
    print "\033[2J";
    print "\033[0;0H";
}

MAIN: {
    GetOptions(
        'command' => \$a_command,
        'stop' => \$a_stop,
        'rootDir=s' => \$a_rootDir,
        'exact' => \$a_exact,
        'first' => \$a_first,
        'help' => \$a_help,
    ) || (help() && exit 1);

    if (defined $a_help) {
        help();
        exit 1;
    }

    $| = 1;

    my $hasArgs = @ARGV > 0;
    my @specArgs = @ARGV;
    if (defined $a_exact) {
        @specArgs = map { "\"_/$_.spec\"" } @ARGV;
    }

    if (defined $a_first) {
        my $args = join(" ", @specArgs);
        my $command = "./node_modules/.bin/jest $args --listTests | head -n 1";
        @specArgs = runCommand($command);
        chomp @specArgs;
    }

    my $debugPrintLimit = 100000;
    my $testTimeout = 20000;

    my $arg = join(" ", @specArgs);
    my $watch = $a_stop ? "" : "--watch";
    if (!$hasArgs) {
        $watch = "";
        $arg = "";
    }
    my $command = "DEBUG_PRINT_LIMIT=${debugPrintLimit} ./node_modules/.bin/jest $arg ${watch} --testTimeout=${testTimeout}";

    if (defined $a_rootDir) {
        $command .= " --rootDir $a_rootDir";
    }

    if (defined $a_command) {
        print "$command\n";
        exit 0;
    }

    clearScreen();
    print "$command\n";
    my @results = runCommand($command);
    print @results;

    exit 0;
}

