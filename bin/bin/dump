#!/usr/bin/perl -w
# dump - show tmux copy buffer

use strict;
use POSIX;

use Getopt::Long;

my $a_write;
my $a_verbose;
my $a_dryRun;
my $a_help;

my $WIN_HOME=$ENV{"WIN_HOME"};

sub help() {
    print STDOUT <<'HELP';

dump - show tmux copy buffer

USAGE:
  >> dump [options]

Options:
  --write   (-w) Write to desktop
  --verbose (-v) See more logging
  --dry-run (-d) Don't open up editor
  --help    (-h) See this message

EXAMPLES:
  >> dump # open up notepad

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}


sub runCommand($) {
    my ($command) = @_;
    open CMD, "$command |" || die "Unable to run $command: $!";
    my @output = <CMD>;
    close CMD;
    return @output;
}

MAIN: {
    GetOptions(
        'write' => \$a_write,
        'verbose' => \$a_verbose,
        'dry-run' => \$a_dryRun,
        'help' => \$a_help,
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg=getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }

    my $home=$ENV{HOME};
    my $DUMP_DIR="$home/dump";
    my $datestring = strftime "%Y-%m-%d-%H-%M-%S", localtime;
    my $DUMP_FILE_PATH="${DUMP_DIR}/${datestring}.txt";

    if (defined $a_verbose) {
        print "Dump dir: $DUMP_DIR\n";
        print "Writing to: $DUMP_FILE_PATH\n";
    }

    runCommand("mkdir -p $DUMP_DIR");

    my $TMUX_BUFFER=`tmux save-buffer -`;
    if (defined $a_verbose) {
        print "Buffer: \n";
        print "<<<\n";
        print "$TMUX_BUFFER\n";
        print ">>>\n";
    }

    open(my $fh, '>', $DUMP_FILE_PATH) or die "Could not open file '$DUMP_FILE_PATH' $!";
    print $fh $TMUX_BUFFER;
    close $fh;

    if (defined $a_dryRun) {
        exit 0;
    }

    if (defined $a_write) {
        `cp $DUMP_FILE_PATH ${WIN_HOME}/Desktop`;
        exit 0;
    }

    `notepad.exe $DUMP_FILE_PATH`;

    exit 0;
}

