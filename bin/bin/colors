#!/usr/bin/perl -w

use strict;

use Getopt::Long;

my $a_help;

sub help() {
    print STDOUT <<'HELP';

colors

USAGE:
  >> colors [options]

Options:
  --help (-h) See this message

Colors:
  random
  red
  green
  yellow
  blue
  magenta
  cyan
  white
  black
  orange

EXAMPLES:
  >> colors
  >> colors red
  >> colors 100

HELP
}

sub getFirstNonOptionArg {
    my $arg = shift @ARGV;
    if (!defined $arg) {
        return;
    }
    return ($arg =~ /^-/) ? getFirstNonOptionArg() : $arg;
}

MAIN: {
    GetOptions(
        'help' => \$a_help
    ) || (help() && exit 1);

    # show help if either arg or option is given
    my $firstArg = getFirstNonOptionArg();
    if (($firstArg && $firstArg eq "help") || defined $a_help) {
        help();
        exit 1;
    }


    if (!defined $firstArg) {
        for (my $i = 0; $i < 256; $i++) {
            printf "\x1b[38;5;${i}mcolour${i}\n";
        }
    }

    if ($firstArg) {
        my $color = $firstArg;
        if ($color eq "random") {
            $color = int(rand(256));
        } elsif ($color eq "red") {
            $color = 1;
        } elsif ($color eq "green") {
            $color = 2;
        } elsif ($color eq "yellow") {
            $color = 3;
        } elsif ($color eq "blue") {
            $color = 4;
        } elsif ($color eq "magenta") {
            $color = 5;
        } elsif ($color eq "cyan") {
            $color = 6;
        } elsif ($color eq "white") {
            $color = 7;
        } elsif ($color eq "black") {
            $color = 8;
        } elsif ($color eq "orange") {
            $color = 9;
        }
        if ($color =~ /^\d+$/) {
            printf "\x1b[38;5;${color}mcolour${color}\n";
        }
    }

    exit 0;
}

